buildscript {
   repositories {
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-release" }
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-vendor" }
      jcenter()
   }
   dependencies {
      classpath "us.ihmc:ihmc-build:0.13.0"
      classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1"
   }
}
apply plugin: "us.ihmc.ihmc-build"
apply plugin: "com.github.hierynomus.license"
apply plugin: "application"

mainClassName = "us.ihmc.idl.generator.IDLGenerator"

ihmc.sourceSetProject("test").apply plugin: "application"
ihmc.sourceSetProject("test").mainClassName = "us.ihmc.pubsub.examples.PublisherExample"

ihmc {
   loadProductProperties("../group.gradle.properties")

   configureDependencyResolution()
   resourceDirectory("main", "templates")
   javaDirectory("test", "generated-java")
   resourceDirectory("test", "idl")
   configurePublications()
}

dependencies {
   compile gradleApi()
   compile group: "us.ihmc", name: "eprosima-idl-parser", version: version
   compile group: "org.anarres", name: "jcpp", version: "1.4.12"
   compile group: "us.ihmc", name: "euclid-core", version: "0.4.13"
}

testDependencies {
   compile group: "us.ihmc", name: "ihmc-pub-sub", version: version
   compile group: "junit", name: "junit", version: "4.12"
}

license {
   header rootProject.file("license-header.txt")
   ext.year = Calendar.getInstance().get(Calendar.YEAR)
   strictCheck true

   sourceSets = project.container(SourceSet)
   sourceSets.add(ihmc.sourceSet("main"))
}
//
//task generateIDLElementTest(type: us.ihmc.idl.generator.IDLGeneratorTask) {
//   idlFiles = fileTree(dir: "src/test/idl")
//   includeDirs = files(".", "idl")
//   targetDirectory = file("src/test/generated-java")
//   packagePrefix = "us.ihmc.idl.generated"
//}
