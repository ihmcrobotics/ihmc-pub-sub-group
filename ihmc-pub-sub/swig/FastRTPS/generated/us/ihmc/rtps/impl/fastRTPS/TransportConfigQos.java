/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class TransportConfigQos extends QosPolicy {
  private transient long swigCPtr;

  protected TransportConfigQos(long cPtr, boolean cMemoryOwn) {
    super(FastRTPSJNI.TransportConfigQos_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TransportConfigQos obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FastRTPSJNI.delete_TransportConfigQos(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public TransportConfigQos() {
    this(FastRTPSJNI.new_TransportConfigQos(), true);
  }

  public void clear() {
    FastRTPSJNI.TransportConfigQos_clear(swigCPtr, this);
  }

  public void setUser_transports(SWIGTYPE_p_std__vectorT_std__shared_ptrT_eprosima__fastdds__rtps__TransportDescriptorInterface_t_t value) {
    FastRTPSJNI.TransportConfigQos_user_transports_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_std__shared_ptrT_eprosima__fastdds__rtps__TransportDescriptorInterface_t_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_std__shared_ptrT_eprosima__fastdds__rtps__TransportDescriptorInterface_t_t getUser_transports() {
    long cPtr = FastRTPSJNI.TransportConfigQos_user_transports_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_std__shared_ptrT_eprosima__fastdds__rtps__TransportDescriptorInterface_t_t(cPtr, false);
  }

  public void setUse_builtin_transports(boolean value) {
    FastRTPSJNI.TransportConfigQos_use_builtin_transports_set(swigCPtr, this, value);
  }

  public boolean getUse_builtin_transports() {
    return FastRTPSJNI.TransportConfigQos_use_builtin_transports_get(swigCPtr, this);
  }

  public void setSend_socket_buffer_size(long value) {
    FastRTPSJNI.TransportConfigQos_send_socket_buffer_size_set(swigCPtr, this, value);
  }

  public long getSend_socket_buffer_size() {
    return FastRTPSJNI.TransportConfigQos_send_socket_buffer_size_get(swigCPtr, this);
  }

  public void setListen_socket_buffer_size(long value) {
    FastRTPSJNI.TransportConfigQos_listen_socket_buffer_size_set(swigCPtr, this, value);
  }

  public long getListen_socket_buffer_size() {
    return FastRTPSJNI.TransportConfigQos_listen_socket_buffer_size_get(swigCPtr, this);
  }

}
