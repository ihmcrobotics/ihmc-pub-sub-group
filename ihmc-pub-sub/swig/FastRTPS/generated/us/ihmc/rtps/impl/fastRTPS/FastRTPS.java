/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class FastRTPS {
  public static SWIGTYPE_p_unsigned_char new_charArray(int nelements) {
    long cPtr = FastRTPSJNI.new_charArray(nelements);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public static void delete_charArray(SWIGTYPE_p_unsigned_char ary) {
    FastRTPSJNI.delete_charArray(SWIGTYPE_p_unsigned_char.getCPtr(ary));
  }

  public static short charArray_getitem(SWIGTYPE_p_unsigned_char ary, int index) {
    return FastRTPSJNI.charArray_getitem(SWIGTYPE_p_unsigned_char.getCPtr(ary), index);
  }

  public static void charArray_setitem(SWIGTYPE_p_unsigned_char ary, int index, short value) {
    FastRTPSJNI.charArray_setitem(SWIGTYPE_p_unsigned_char.getCPtr(ary), index, value);
  }

  public static java.nio.ByteBuffer new_octetArray(int nelements) {  
  return FastRTPSJNI.new_octetArray(nelements);  
}

  public static void delete_octetArray(java.nio.ByteBuffer ary) {
  assert ary.isDirect() : "Buffer must be allocated direct.";
    {
      FastRTPSJNI.delete_octetArray(ary);
    }
  }

  public static short octetArray_getitem(java.nio.ByteBuffer ary, int index) {
  assert ary.isDirect() : "Buffer must be allocated direct.";
    {
      return FastRTPSJNI.octetArray_getitem(ary, index);
    }
  }

  public static void octetArray_setitem(java.nio.ByteBuffer ary, int index, short value) {
  assert ary.isDirect() : "Buffer must be allocated direct.";
    {
      FastRTPSJNI.octetArray_setitem(ary, index, value);
    }
  }

  public static SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind getVOLATILE_DURABILITY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind(FastRTPSJNI.VOLATILE_DURABILITY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind getTRANSIENT_LOCAL_DURABILITY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind(FastRTPSJNI.TRANSIENT_LOCAL_DURABILITY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind getTRANSIENT_DURABILITY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind(FastRTPSJNI.TRANSIENT_DURABILITY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind getPERSISTENT_DURABILITY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__DurabilityQosPolicyKind(FastRTPSJNI.PERSISTENT_DURABILITY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__LivelinessQosPolicyKind getAUTOMATIC_LIVELINESS_QOS() {
    return new SWIGTYPE_p_fastdds__dds__LivelinessQosPolicyKind(FastRTPSJNI.AUTOMATIC_LIVELINESS_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__LivelinessQosPolicyKind getMANUAL_BY_PARTICIPANT_LIVELINESS_QOS() {
    return new SWIGTYPE_p_fastdds__dds__LivelinessQosPolicyKind(FastRTPSJNI.MANUAL_BY_PARTICIPANT_LIVELINESS_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__LivelinessQosPolicyKind getMANUAL_BY_TOPIC_LIVELINESS_QOS() {
    return new SWIGTYPE_p_fastdds__dds__LivelinessQosPolicyKind(FastRTPSJNI.MANUAL_BY_TOPIC_LIVELINESS_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__ReliabilityQosPolicyKind getBEST_EFFORT_RELIABILITY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__ReliabilityQosPolicyKind(FastRTPSJNI.BEST_EFFORT_RELIABILITY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__ReliabilityQosPolicyKind getRELIABLE_RELIABILITY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__ReliabilityQosPolicyKind(FastRTPSJNI.RELIABLE_RELIABILITY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__OwnershipQosPolicyKind getSHARED_OWNERSHIP_QOS() {
    return new SWIGTYPE_p_fastdds__dds__OwnershipQosPolicyKind(FastRTPSJNI.SHARED_OWNERSHIP_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__OwnershipQosPolicyKind getEXCLUSIVE_OWNERSHIP_QOS() {
    return new SWIGTYPE_p_fastdds__dds__OwnershipQosPolicyKind(FastRTPSJNI.EXCLUSIVE_OWNERSHIP_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DestinationOrderQosPolicyKind getBY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS() {
    return new SWIGTYPE_p_fastdds__dds__DestinationOrderQosPolicyKind(FastRTPSJNI.BY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DestinationOrderQosPolicyKind getBY_SOURCE_TIMESTAMP_DESTINATIONORDER_QOS() {
    return new SWIGTYPE_p_fastdds__dds__DestinationOrderQosPolicyKind(FastRTPSJNI.BY_SOURCE_TIMESTAMP_DESTINATIONORDER_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__PresentationQosPolicyAccessScopeKind getINSTANCE_PRESENTATION_QOS() {
    return new SWIGTYPE_p_fastdds__dds__PresentationQosPolicyAccessScopeKind(FastRTPSJNI.INSTANCE_PRESENTATION_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__PresentationQosPolicyAccessScopeKind getTOPIC_PRESENTATION_QOS() {
    return new SWIGTYPE_p_fastdds__dds__PresentationQosPolicyAccessScopeKind(FastRTPSJNI.TOPIC_PRESENTATION_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__PresentationQosPolicyAccessScopeKind getGROUP_PRESENTATION_QOS() {
    return new SWIGTYPE_p_fastdds__dds__PresentationQosPolicyAccessScopeKind(FastRTPSJNI.GROUP_PRESENTATION_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__HistoryQosPolicyKind getKEEP_LAST_HISTORY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__HistoryQosPolicyKind(FastRTPSJNI.KEEP_LAST_HISTORY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__HistoryQosPolicyKind getKEEP_ALL_HISTORY_QOS() {
    return new SWIGTYPE_p_fastdds__dds__HistoryQosPolicyKind(FastRTPSJNI.KEEP_ALL_HISTORY_QOS_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__PublishModeQosPolicyKind getSYNCHRONOUS_PUBLISH_MODE() {
    return new SWIGTYPE_p_fastdds__dds__PublishModeQosPolicyKind(FastRTPSJNI.SYNCHRONOUS_PUBLISH_MODE_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__PublishModeQosPolicyKind getASYNCHRONOUS_PUBLISH_MODE() {
    return new SWIGTYPE_p_fastdds__dds__PublishModeQosPolicyKind(FastRTPSJNI.ASYNCHRONOUS_PUBLISH_MODE_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__TypeConsistencyKind getDISALLOW_TYPE_COERCION() {
    return new SWIGTYPE_p_fastdds__dds__TypeConsistencyKind(FastRTPSJNI.DISALLOW_TYPE_COERCION_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__TypeConsistencyKind getALLOW_TYPE_COERCION() {
    return new SWIGTYPE_p_fastdds__dds__TypeConsistencyKind(FastRTPSJNI.ALLOW_TYPE_COERCION_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DataSharingKind getAUTO() {
    return new SWIGTYPE_p_fastdds__dds__DataSharingKind(FastRTPSJNI.AUTO_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DataSharingKind getON() {
    return new SWIGTYPE_p_fastdds__dds__DataSharingKind(FastRTPSJNI.ON_get(), true);
  }

  public static SWIGTYPE_p_fastdds__dds__DataSharingKind getOFF() {
    return new SWIGTYPE_p_fastdds__dds__DataSharingKind(FastRTPSJNI.OFF_get(), true);
  }

  public static short getLocatorOctet(int octet, SWIGTYPE_p_Locator_t locator) {
    return FastRTPSJNI.getLocatorOctet(octet, SWIGTYPE_p_Locator_t.getCPtr(locator));
  }

  public static void setLocatorOctet(SWIGTYPE_p_Locator_t locator, int oct, short value) {
    FastRTPSJNI.setLocatorOctet(SWIGTYPE_p_Locator_t.getCPtr(locator), oct, value);
  }

  public static SWIGTYPE_p_Locator_t getLocator(SWIGTYPE_p_LocatorList_t list, int index) {
    long cPtr = FastRTPSJNI.getLocator(SWIGTYPE_p_LocatorList_t.getCPtr(list), index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Locator_t(cPtr, false);
  }

  public static SWIGTYPE_p_Locator_t getRemoteUnicastLocator(RemoteLocatorList list, int index) {
    long cPtr = FastRTPSJNI.getRemoteUnicastLocator(RemoteLocatorList.getCPtr(list), list, index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Locator_t(cPtr, false);
  }

  public static SWIGTYPE_p_Locator_t getRemoteMulticastLocator(RemoteLocatorList list, int index) {
    long cPtr = FastRTPSJNI.getRemoteMulticastLocator(RemoteLocatorList.getCPtr(list), list, index);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Locator_t(cPtr, false);
  }

  public static int getRemoteMulticastLocatorSize(RemoteLocatorList list) {
    return FastRTPSJNI.getRemoteMulticastLocatorSize(RemoteLocatorList.getCPtr(list), list);
  }

  public static int getRemoteUnicastLocatorSize(RemoteLocatorList list) {
    return FastRTPSJNI.getRemoteUnicastLocatorSize(RemoteLocatorList.getCPtr(list), list);
  }

}
