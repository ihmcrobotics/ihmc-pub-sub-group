/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class DataSharingQosPolicy extends QosPolicy {
  private transient long swigCPtr;

  protected DataSharingQosPolicy(long cPtr, boolean cMemoryOwn) {
    super(FastRTPSJNI.DataSharingQosPolicy_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DataSharingQosPolicy obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FastRTPSJNI.delete_DataSharingQosPolicy(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DataSharingQosPolicy() {
    this(FastRTPSJNI.new_DataSharingQosPolicy__SWIG_0(), true);
  }

  public DataSharingQosPolicy(DataSharingQosPolicy b) {
    this(FastRTPSJNI.new_DataSharingQosPolicy__SWIG_1(DataSharingQosPolicy.getCPtr(b), b), true);
  }

  public void clear() {
    FastRTPSJNI.DataSharingQosPolicy_clear(swigCPtr, this);
  }

  public DataSharingKind kind() {
    return DataSharingKind.swigToEnum(FastRTPSJNI.DataSharingQosPolicy_kind(swigCPtr, this));
  }

  public String shm_directory() {
    return FastRTPSJNI.DataSharingQosPolicy_shm_directory(swigCPtr, this);
  }

  public SWIGTYPE_p_std__vectorT_unsigned_long_long_t domain_ids() {
    return new SWIGTYPE_p_std__vectorT_unsigned_long_long_t(FastRTPSJNI.DataSharingQosPolicy_domain_ids(swigCPtr, this), false);
  }

  public void set_max_domains(long size) {
    FastRTPSJNI.DataSharingQosPolicy_set_max_domains(swigCPtr, this, size);
  }

  public long max_domains() {
    return FastRTPSJNI.DataSharingQosPolicy_max_domains(swigCPtr, this);
  }

  public void automatic() {
    FastRTPSJNI.DataSharingQosPolicy_automatic__SWIG_0(swigCPtr, this);
  }

  public void automatic(SWIGTYPE_p_std__vectorT_unsigned_short_t domain_ids) {
    FastRTPSJNI.DataSharingQosPolicy_automatic__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__vectorT_unsigned_short_t.getCPtr(domain_ids));
  }

  public void automatic(String directory) {
    FastRTPSJNI.DataSharingQosPolicy_automatic__SWIG_2(swigCPtr, this, directory);
  }

  public void automatic(String directory, SWIGTYPE_p_std__vectorT_unsigned_short_t domain_ids) {
    FastRTPSJNI.DataSharingQosPolicy_automatic__SWIG_3(swigCPtr, this, directory, SWIGTYPE_p_std__vectorT_unsigned_short_t.getCPtr(domain_ids));
  }

  public void on(String directory) {
    FastRTPSJNI.DataSharingQosPolicy_on__SWIG_0(swigCPtr, this, directory);
  }

  public void on(String directory, SWIGTYPE_p_std__vectorT_unsigned_short_t domain_ids) {
    FastRTPSJNI.DataSharingQosPolicy_on__SWIG_1(swigCPtr, this, directory, SWIGTYPE_p_std__vectorT_unsigned_short_t.getCPtr(domain_ids));
  }

  public void off() {
    FastRTPSJNI.DataSharingQosPolicy_off(swigCPtr, this);
  }

  public void add_domain_id(int id) {
    FastRTPSJNI.DataSharingQosPolicy_add_domain_id__SWIG_0(swigCPtr, this, id);
  }

  public void add_domain_id(java.math.BigInteger id) {
    FastRTPSJNI.DataSharingQosPolicy_add_domain_id__SWIG_1(swigCPtr, this, id);
  }

}
