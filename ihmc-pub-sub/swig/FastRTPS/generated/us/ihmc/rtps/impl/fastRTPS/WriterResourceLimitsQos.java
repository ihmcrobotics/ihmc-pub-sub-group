/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class WriterResourceLimitsQos {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected WriterResourceLimitsQos(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WriterResourceLimitsQos obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FastRTPSJNI.delete_WriterResourceLimitsQos(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public WriterResourceLimitsQos() {
    this(FastRTPSJNI.new_WriterResourceLimitsQos(), true);
  }

  public void setMatched_subscriber_allocation(SWIGTYPE_p_eprosima__fastrtps__ResourceLimitedContainerConfig value) {
    FastRTPSJNI.WriterResourceLimitsQos_matched_subscriber_allocation_set(swigCPtr, this, SWIGTYPE_p_eprosima__fastrtps__ResourceLimitedContainerConfig.getCPtr(value));
  }

  public SWIGTYPE_p_eprosima__fastrtps__ResourceLimitedContainerConfig getMatched_subscriber_allocation() {
    return new SWIGTYPE_p_eprosima__fastrtps__ResourceLimitedContainerConfig(FastRTPSJNI.WriterResourceLimitsQos_matched_subscriber_allocation_get(swigCPtr, this), true);
  }

}
