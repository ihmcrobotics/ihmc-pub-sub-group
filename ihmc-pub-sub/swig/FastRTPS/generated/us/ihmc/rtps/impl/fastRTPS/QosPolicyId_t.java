/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public final class QosPolicyId_t {
  public final static QosPolicyId_t INVALID_QOS_POLICY_ID = new QosPolicyId_t("INVALID_QOS_POLICY_ID", 0);
  public final static QosPolicyId_t USERDATA_QOS_POLICY_ID = new QosPolicyId_t("USERDATA_QOS_POLICY_ID", 1);
  public final static QosPolicyId_t DURABILITY_QOS_POLICY_ID = new QosPolicyId_t("DURABILITY_QOS_POLICY_ID", 2);
  public final static QosPolicyId_t PRESENTATION_QOS_POLICY_ID = new QosPolicyId_t("PRESENTATION_QOS_POLICY_ID", 3);
  public final static QosPolicyId_t DEADLINE_QOS_POLICY_ID = new QosPolicyId_t("DEADLINE_QOS_POLICY_ID", 4);
  public final static QosPolicyId_t LATENCYBUDGET_QOS_POLICY_ID = new QosPolicyId_t("LATENCYBUDGET_QOS_POLICY_ID", 5);
  public final static QosPolicyId_t OWNERSHIP_QOS_POLICY_ID = new QosPolicyId_t("OWNERSHIP_QOS_POLICY_ID", 6);
  public final static QosPolicyId_t OWNERSHIPSTRENGTH_QOS_POLICY_ID = new QosPolicyId_t("OWNERSHIPSTRENGTH_QOS_POLICY_ID", 7);
  public final static QosPolicyId_t LIVELINESS_QOS_POLICY_ID = new QosPolicyId_t("LIVELINESS_QOS_POLICY_ID", 8);
  public final static QosPolicyId_t TIMEBASEDFILTER_QOS_POLICY_ID = new QosPolicyId_t("TIMEBASEDFILTER_QOS_POLICY_ID", 9);
  public final static QosPolicyId_t PARTITION_QOS_POLICY_ID = new QosPolicyId_t("PARTITION_QOS_POLICY_ID", 10);
  public final static QosPolicyId_t RELIABILITY_QOS_POLICY_ID = new QosPolicyId_t("RELIABILITY_QOS_POLICY_ID", 11);
  public final static QosPolicyId_t DESTINATIONORDER_QOS_POLICY_ID = new QosPolicyId_t("DESTINATIONORDER_QOS_POLICY_ID", 12);
  public final static QosPolicyId_t HISTORY_QOS_POLICY_ID = new QosPolicyId_t("HISTORY_QOS_POLICY_ID", 13);
  public final static QosPolicyId_t RESOURCELIMITS_QOS_POLICY_ID = new QosPolicyId_t("RESOURCELIMITS_QOS_POLICY_ID", 14);
  public final static QosPolicyId_t ENTITYFACTORY_QOS_POLICY_ID = new QosPolicyId_t("ENTITYFACTORY_QOS_POLICY_ID", 15);
  public final static QosPolicyId_t WRITERDATALIFECYCLE_QOS_POLICY_ID = new QosPolicyId_t("WRITERDATALIFECYCLE_QOS_POLICY_ID", 16);
  public final static QosPolicyId_t READERDATALIFECYCLE_QOS_POLICY_ID = new QosPolicyId_t("READERDATALIFECYCLE_QOS_POLICY_ID", 17);
  public final static QosPolicyId_t TOPICDATA_QOS_POLICY_ID = new QosPolicyId_t("TOPICDATA_QOS_POLICY_ID", 18);
  public final static QosPolicyId_t GROUPDATA_QOS_POLICY_ID = new QosPolicyId_t("GROUPDATA_QOS_POLICY_ID", 19);
  public final static QosPolicyId_t TRANSPORTPRIORITY_QOS_POLICY_ID = new QosPolicyId_t("TRANSPORTPRIORITY_QOS_POLICY_ID", 20);
  public final static QosPolicyId_t LIFESPAN_QOS_POLICY_ID = new QosPolicyId_t("LIFESPAN_QOS_POLICY_ID", 21);
  public final static QosPolicyId_t DURABILITYSERVICE_QOS_POLICY_ID = new QosPolicyId_t("DURABILITYSERVICE_QOS_POLICY_ID", 22);
  public final static QosPolicyId_t DATAREPRESENTATION_QOS_POLICY_ID = new QosPolicyId_t("DATAREPRESENTATION_QOS_POLICY_ID", 23);
  public final static QosPolicyId_t TYPECONSISTENCYENFORCEMENT_QOS_POLICY_ID = new QosPolicyId_t("TYPECONSISTENCYENFORCEMENT_QOS_POLICY_ID", 24);
  public final static QosPolicyId_t DISABLEPOSITIVEACKS_QOS_POLICY_ID = new QosPolicyId_t("DISABLEPOSITIVEACKS_QOS_POLICY_ID", 25);
  public final static QosPolicyId_t PARTICIPANTRESOURCELIMITS_QOS_POLICY_ID = new QosPolicyId_t("PARTICIPANTRESOURCELIMITS_QOS_POLICY_ID", 26);
  public final static QosPolicyId_t PROPERTYPOLICY_QOS_POLICY_ID = new QosPolicyId_t("PROPERTYPOLICY_QOS_POLICY_ID", 27);
  public final static QosPolicyId_t PUBLISHMODE_QOS_POLICY_ID = new QosPolicyId_t("PUBLISHMODE_QOS_POLICY_ID", 28);
  public final static QosPolicyId_t READERRESOURCELIMITS_QOS_POLICY_ID = new QosPolicyId_t("READERRESOURCELIMITS_QOS_POLICY_ID", 29);
  public final static QosPolicyId_t RTPSENDPOINT_QOS_POLICY_ID = new QosPolicyId_t("RTPSENDPOINT_QOS_POLICY_ID", 30);
  public final static QosPolicyId_t RTPSRELIABLEREADER_QOS_POLICY_ID = new QosPolicyId_t("RTPSRELIABLEREADER_QOS_POLICY_ID", 31);
  public final static QosPolicyId_t RTPSRELIABLEWRITER_QOS_POLICY_ID = new QosPolicyId_t("RTPSRELIABLEWRITER_QOS_POLICY_ID", 32);
  public final static QosPolicyId_t TRANSPORTCONFIG_QOS_POLICY_ID = new QosPolicyId_t("TRANSPORTCONFIG_QOS_POLICY_ID", 33);
  public final static QosPolicyId_t TYPECONSISTENCY_QOS_POLICY_ID = new QosPolicyId_t("TYPECONSISTENCY_QOS_POLICY_ID", 34);
  public final static QosPolicyId_t WIREPROTOCOLCONFIG_QOS_POLICY_ID = new QosPolicyId_t("WIREPROTOCOLCONFIG_QOS_POLICY_ID", 35);
  public final static QosPolicyId_t WRITERRESOURCELIMITS_QOS_POLICY_ID = new QosPolicyId_t("WRITERRESOURCELIMITS_QOS_POLICY_ID", 36);
  public final static QosPolicyId_t NEXT_QOS_POLICY_ID = new QosPolicyId_t("NEXT_QOS_POLICY_ID");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static QosPolicyId_t swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + QosPolicyId_t.class + " with value " + swigValue);
  }

  private QosPolicyId_t(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private QosPolicyId_t(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private QosPolicyId_t(String swigName, QosPolicyId_t swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static QosPolicyId_t[] swigValues = { INVALID_QOS_POLICY_ID, USERDATA_QOS_POLICY_ID, DURABILITY_QOS_POLICY_ID, PRESENTATION_QOS_POLICY_ID, DEADLINE_QOS_POLICY_ID, LATENCYBUDGET_QOS_POLICY_ID, OWNERSHIP_QOS_POLICY_ID, OWNERSHIPSTRENGTH_QOS_POLICY_ID, LIVELINESS_QOS_POLICY_ID, TIMEBASEDFILTER_QOS_POLICY_ID, PARTITION_QOS_POLICY_ID, RELIABILITY_QOS_POLICY_ID, DESTINATIONORDER_QOS_POLICY_ID, HISTORY_QOS_POLICY_ID, RESOURCELIMITS_QOS_POLICY_ID, ENTITYFACTORY_QOS_POLICY_ID, WRITERDATALIFECYCLE_QOS_POLICY_ID, READERDATALIFECYCLE_QOS_POLICY_ID, TOPICDATA_QOS_POLICY_ID, GROUPDATA_QOS_POLICY_ID, TRANSPORTPRIORITY_QOS_POLICY_ID, LIFESPAN_QOS_POLICY_ID, DURABILITYSERVICE_QOS_POLICY_ID, DATAREPRESENTATION_QOS_POLICY_ID, TYPECONSISTENCYENFORCEMENT_QOS_POLICY_ID, DISABLEPOSITIVEACKS_QOS_POLICY_ID, PARTICIPANTRESOURCELIMITS_QOS_POLICY_ID, PROPERTYPOLICY_QOS_POLICY_ID, PUBLISHMODE_QOS_POLICY_ID, READERRESOURCELIMITS_QOS_POLICY_ID, RTPSENDPOINT_QOS_POLICY_ID, RTPSRELIABLEREADER_QOS_POLICY_ID, RTPSRELIABLEWRITER_QOS_POLICY_ID, TRANSPORTCONFIG_QOS_POLICY_ID, TYPECONSISTENCY_QOS_POLICY_ID, WIREPROTOCOLCONFIG_QOS_POLICY_ID, WRITERRESOURCELIMITS_QOS_POLICY_ID, NEXT_QOS_POLICY_ID };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

