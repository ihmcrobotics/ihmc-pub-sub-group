/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class WriterAttributes {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected WriterAttributes(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WriterAttributes obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FastRTPSJNI.delete_WriterAttributes(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public WriterAttributes() {
    this(FastRTPSJNI.new_WriterAttributes(), true);
  }

  public void setEndpoint(EndpointAttributes value) {
    FastRTPSJNI.WriterAttributes_endpoint_set(swigCPtr, this, EndpointAttributes.getCPtr(value), value);
  }

  public EndpointAttributes getEndpoint() {
    long cPtr = FastRTPSJNI.WriterAttributes_endpoint_get(swigCPtr, this);
    return (cPtr == 0) ? null : new EndpointAttributes(cPtr, false);
  }

  public void setTimes(WriterTimes value) {
    FastRTPSJNI.WriterAttributes_times_set(swigCPtr, this, WriterTimes.getCPtr(value), value);
  }

  public WriterTimes getTimes() {
    long cPtr = FastRTPSJNI.WriterAttributes_times_get(swigCPtr, this);
    return (cPtr == 0) ? null : new WriterTimes(cPtr, false);
  }

  public void setLiveliness_kind(LivelinessQosPolicyKind value) {
    FastRTPSJNI.WriterAttributes_liveliness_kind_set(swigCPtr, this, value.swigValue());
  }

  public LivelinessQosPolicyKind getLiveliness_kind() {
    return LivelinessQosPolicyKind.swigToEnum(FastRTPSJNI.WriterAttributes_liveliness_kind_get(swigCPtr, this));
  }

  public void setLiveliness_lease_duration(Time_t value) {
    FastRTPSJNI.WriterAttributes_liveliness_lease_duration_set(swigCPtr, this, Time_t.getCPtr(value), value);
  }

  public Time_t getLiveliness_lease_duration() {
    long cPtr = FastRTPSJNI.WriterAttributes_liveliness_lease_duration_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Time_t(cPtr, false);
  }

  public void setLiveliness_announcement_period(Time_t value) {
    FastRTPSJNI.WriterAttributes_liveliness_announcement_period_set(swigCPtr, this, Time_t.getCPtr(value), value);
  }

  public Time_t getLiveliness_announcement_period() {
    long cPtr = FastRTPSJNI.WriterAttributes_liveliness_announcement_period_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Time_t(cPtr, false);
  }

  public void setMode(RTPSWriterPublishMode value) {
    FastRTPSJNI.WriterAttributes_mode_set(swigCPtr, this, value.swigValue());
  }

  public RTPSWriterPublishMode getMode() {
    return RTPSWriterPublishMode.swigToEnum(FastRTPSJNI.WriterAttributes_mode_get(swigCPtr, this));
  }

  public void setThroughputController(ThroughputControllerDescriptor value) {
    FastRTPSJNI.WriterAttributes_throughputController_set(swigCPtr, this, ThroughputControllerDescriptor.getCPtr(value), value);
  }

  public ThroughputControllerDescriptor getThroughputController() {
    long cPtr = FastRTPSJNI.WriterAttributes_throughputController_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ThroughputControllerDescriptor(cPtr, false);
  }

  public void setDisable_heartbeat_piggyback(boolean value) {
    FastRTPSJNI.WriterAttributes_disable_heartbeat_piggyback_set(swigCPtr, this, value);
  }

  public boolean getDisable_heartbeat_piggyback() {
    return FastRTPSJNI.WriterAttributes_disable_heartbeat_piggyback_get(swigCPtr, this);
  }

  public void setMatched_readers_allocation(SWIGTYPE_p_ResourceLimitedContainerConfig value) {
    FastRTPSJNI.WriterAttributes_matched_readers_allocation_set(swigCPtr, this, SWIGTYPE_p_ResourceLimitedContainerConfig.getCPtr(value));
  }

  public SWIGTYPE_p_ResourceLimitedContainerConfig getMatched_readers_allocation() {
    return new SWIGTYPE_p_ResourceLimitedContainerConfig(FastRTPSJNI.WriterAttributes_matched_readers_allocation_get(swigCPtr, this), true);
  }

  public void setDisable_positive_acks(boolean value) {
    FastRTPSJNI.WriterAttributes_disable_positive_acks_set(swigCPtr, this, value);
  }

  public boolean getDisable_positive_acks() {
    return FastRTPSJNI.WriterAttributes_disable_positive_acks_get(swigCPtr, this);
  }

  public void setKeep_duration(Time_t value) {
    FastRTPSJNI.WriterAttributes_keep_duration_set(swigCPtr, this, Time_t.getCPtr(value), value);
  }

  public Time_t getKeep_duration() {
    long cPtr = FastRTPSJNI.WriterAttributes_keep_duration_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Time_t(cPtr, false);
  }

}
