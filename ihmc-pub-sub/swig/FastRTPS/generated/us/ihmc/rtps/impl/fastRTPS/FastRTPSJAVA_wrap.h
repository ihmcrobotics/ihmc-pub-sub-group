/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_FastRTPS_WRAP_H_
#define SWIG_FastRTPS_WRAP_H_

class SwigDirector_NativeParticipantListener : public us::ihmc::rtps::impl::fastRTPS::NativeParticipantListener, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_NativeParticipantListener(JNIEnv *jenv);
    virtual void onParticipantDiscovery(int64_t infoPtr, int64_t guidHigh, int64_t guidLow, int discoveryStatus);
    virtual ~SwigDirector_NativeParticipantListener();
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_NativePublisherListener : public us::ihmc::rtps::impl::fastRTPS::NativePublisherListener, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_NativePublisherListener(JNIEnv *jenv);
    virtual void onWriterMatched(int matchingStatus, int64_t guidHigh, int64_t guidLow);
    virtual ~SwigDirector_NativePublisherListener();
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_NativeSubscriberListener : public us::ihmc::rtps::impl::fastRTPS::NativeSubscriberListener, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_NativeSubscriberListener(JNIEnv *jenv);
    virtual void onSubscriptionMatched(int matchingStatus, int64_t guidHigh, int64_t guidLow);
    virtual void onNewDataMessage();
    virtual ~SwigDirector_NativeSubscriberListener();
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<2> swig_override;
};


#endif
