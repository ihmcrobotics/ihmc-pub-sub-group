/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class FastRTPSJNI {
  public final static native long new_charArray(int jarg1);
  public final static native void delete_charArray(long jarg1);
  public final static native short charArray_getitem(long jarg1, int jarg2);
  public final static native void charArray_setitem(long jarg1, int jarg2, short jarg3);
  public final static native long new_octetVector__SWIG_0();
  public final static native long new_octetVector__SWIG_1(long jarg1, octetVector jarg1_);
  public final static native long octetVector_capacity(long jarg1, octetVector jarg1_);
  public final static native void octetVector_reserve(long jarg1, octetVector jarg1_, long jarg2);
  public final static native boolean octetVector_isEmpty(long jarg1, octetVector jarg1_);
  public final static native void octetVector_clear(long jarg1, octetVector jarg1_);
  public final static native long new_octetVector__SWIG_2(int jarg1, short jarg2);
  public final static native int octetVector_doSize(long jarg1, octetVector jarg1_);
  public final static native void octetVector_doAdd__SWIG_0(long jarg1, octetVector jarg1_, short jarg2);
  public final static native void octetVector_doAdd__SWIG_1(long jarg1, octetVector jarg1_, int jarg2, short jarg3);
  public final static native short octetVector_doRemove(long jarg1, octetVector jarg1_, int jarg2);
  public final static native short octetVector_doGet(long jarg1, octetVector jarg1_, int jarg2);
  public final static native short octetVector_doSet(long jarg1, octetVector jarg1_, int jarg2, short jarg3);
  public final static native void octetVector_doRemoveRange(long jarg1, octetVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_octetVector(long jarg1);
  public final static native long new_stringVector__SWIG_0();
  public final static native long new_stringVector__SWIG_1(long jarg1, stringVector jarg1_);
  public final static native long stringVector_capacity(long jarg1, stringVector jarg1_);
  public final static native void stringVector_reserve(long jarg1, stringVector jarg1_, long jarg2);
  public final static native boolean stringVector_isEmpty(long jarg1, stringVector jarg1_);
  public final static native void stringVector_clear(long jarg1, stringVector jarg1_);
  public final static native long new_stringVector__SWIG_2(int jarg1, String jarg2);
  public final static native int stringVector_doSize(long jarg1, stringVector jarg1_);
  public final static native void stringVector_doAdd__SWIG_0(long jarg1, stringVector jarg1_, String jarg2);
  public final static native void stringVector_doAdd__SWIG_1(long jarg1, stringVector jarg1_, int jarg2, String jarg3);
  public final static native String stringVector_doRemove(long jarg1, stringVector jarg1_, int jarg2);
  public final static native String stringVector_doGet(long jarg1, stringVector jarg1_, int jarg2);
  public final static native String stringVector_doSet(long jarg1, stringVector jarg1_, int jarg2, String jarg3);
  public final static native void stringVector_doRemoveRange(long jarg1, stringVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_stringVector(long jarg1);
  public final static native java.nio.ByteBuffer new_octetArray(int jarg1);
  public final static native void delete_octetArray(java.nio.ByteBuffer jarg1);
  public final static native short octetArray_getitem(java.nio.ByteBuffer jarg1, int jarg2);
  public final static native void octetArray_setitem(java.nio.ByteBuffer jarg1, int jarg2, short jarg3);
  public final static native void Time_t_seconds_set(long jarg1, Time_t jarg1_, int jarg2);
  public final static native int Time_t_seconds_get(long jarg1, Time_t jarg1_);
  public final static native void Time_t_nanosec_set(long jarg1, Time_t jarg1_, long jarg2);
  public final static native long Time_t_nanosec_get(long jarg1, Time_t jarg1_);
  public final static native long new_Time_t__SWIG_0();
  public final static native long new_Time_t__SWIG_1(int jarg1, long jarg2);
  public final static native void Time_t_fraction(long jarg1, Time_t jarg1_, long jarg2);
  public final static native void Time_t_setFraction(long jarg1, Time_t jarg1_, long jarg2);
  public final static native void delete_Time_t(long jarg1);
  public final static native void SampleInfoMarshaller_encapsulation_set(long jarg1, SampleInfoMarshaller jarg1_, short jarg2);
  public final static native short SampleInfoMarshaller_encapsulation_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_dataLength_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_dataLength_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_changeKind_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_changeKind_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_ownershipStrength_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_ownershipStrength_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_time_seconds_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_time_seconds_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_time_nsec_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_time_nsec_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_instanceHandle_value_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_instanceHandle_value_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_GuidHigh_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_sampleIdentity_GuidHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_GuidLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_sampleIdentity_GuidLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_sequenceNumberHigh_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_sampleIdentity_sequenceNumberHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_sequenceNumberLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_sampleIdentity_sequenceNumberLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_GuidHigh_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_relatedSampleIdentity_GuidHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_GuidLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_relatedSampleIdentity_GuidLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberHigh_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_getInstanceHandleValue(long jarg1, SampleInfoMarshaller jarg1_, java.nio.ByteBuffer jarg2);
  public final static native long new_SampleInfoMarshaller();
  public final static native void delete_SampleInfoMarshaller(long jarg1);
  public final static native void NativeParticipantListener_onParticipantDiscovery(long jarg1, NativeParticipantListener jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void NativeParticipantListener_onParticipantDiscoverySwigExplicitNativeParticipantListener(long jarg1, NativeParticipantListener jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native String NativeParticipantListener_getName(long jarg1, NativeParticipantListener jarg1_, long jarg2);
  public final static native void delete_NativeParticipantListener(long jarg1);
  public final static native long new_NativeParticipantListener();
  public final static native void NativeParticipantListener_director_connect(NativeParticipantListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NativeParticipantListener_change_ownership(NativeParticipantListener obj, long cptr, boolean take_or_release);
  public final static native long new_NativeParticipantImpl(String jarg1, String jarg2, long jarg3, long jarg4, NativeParticipantListener jarg4_) throws java.io.IOException;
  public final static native long NativeParticipantImpl_getGuidLow(long jarg1, NativeParticipantImpl jarg1_);
  public final static native long NativeParticipantImpl_getGuidHigh(long jarg1, NativeParticipantImpl jarg1_);
  public final static native void NativeParticipantImpl_registerType(long jarg1, NativeParticipantImpl jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native void delete_NativeParticipantImpl(long jarg1);
  public final static native void NativePublisherListener_onWriterMatched(long jarg1, NativePublisherListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void NativePublisherListener_onWriterMatchedSwigExplicitNativePublisherListener(long jarg1, NativePublisherListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void delete_NativePublisherListener(long jarg1);
  public final static native long new_NativePublisherListener();
  public final static native void NativePublisherListener_director_connect(NativePublisherListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NativePublisherListener_change_ownership(NativePublisherListener obj, long cptr, boolean take_or_release);
  public final static native long new_NativePublisherImpl(long jarg1, NativeParticipantImpl jarg1_, long jarg2, NativePublisherListener jarg2_) throws java.io.IOException;
  public final static native void delete_NativePublisherImpl(long jarg1);
  public final static native boolean NativePublisherImpl_createPublisher__SWIG_0(long jarg1, NativePublisherImpl jarg1_);
  public final static native boolean NativePublisherImpl_createPublisher__SWIG_1(long jarg1, NativePublisherImpl jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native void NativePublisherImpl_write(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native void NativePublisherImpl_dispose(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native void NativePublisherImpl_unregister(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native void NativePublisherImpl_dispose_and_unregister(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native int NativePublisherImpl_removeAllChange(long jarg1, NativePublisherImpl jarg1_);
  public final static native boolean NativePublisherImpl_wait_for_all_acked(long jarg1, NativePublisherImpl jarg1_, long jarg2, Time_t jarg2_);
  public final static native long NativePublisherImpl_getGuidLow(long jarg1, NativePublisherImpl jarg1_);
  public final static native long NativePublisherImpl_getGuidHigh(long jarg1, NativePublisherImpl jarg1_);
  public final static native void NativeSubscriberListener_onSubscriptionMatched(long jarg1, NativeSubscriberListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void NativeSubscriberListener_onSubscriptionMatchedSwigExplicitNativeSubscriberListener(long jarg1, NativeSubscriberListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void NativeSubscriberListener_onNewDataMessage(long jarg1, NativeSubscriberListener jarg1_);
  public final static native void NativeSubscriberListener_onNewDataMessageSwigExplicitNativeSubscriberListener(long jarg1, NativeSubscriberListener jarg1_);
  public final static native void delete_NativeSubscriberListener(long jarg1);
  public final static native long new_NativeSubscriberListener();
  public final static native void NativeSubscriberListener_director_connect(NativeSubscriberListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NativeSubscriberListener_change_ownership(NativeSubscriberListener obj, long cptr, boolean take_or_release);
  public final static native long new_NativeSubscriberImpl(long jarg1, NativeParticipantImpl jarg1_, long jarg2, NativeSubscriberListener jarg2_) throws java.io.IOException;
  public final static native boolean NativeSubscriberImpl_createSubscriber__SWIG_0(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native boolean NativeSubscriberImpl_createSubscriber__SWIG_1(long jarg1, NativeSubscriberImpl jarg1_, String jarg2, String jarg3, long jarg4);
  public final static native long NativeSubscriberImpl_getGuidLow(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native long NativeSubscriberImpl_getGuidHigh(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native void NativeSubscriberImpl_waitForUnreadMessage(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native boolean NativeSubscriberImpl_readnextData(long jarg1, NativeSubscriberImpl jarg1_, int jarg2, java.nio.ByteBuffer jarg3, long jarg4, SampleInfoMarshaller jarg4_);
  public final static native boolean NativeSubscriberImpl_takeNextData(long jarg1, NativeSubscriberImpl jarg1_, int jarg2, java.nio.ByteBuffer jarg3, long jarg4, SampleInfoMarshaller jarg4_);
  public final static native boolean NativeSubscriberImpl_isInCleanState(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native long NativeSubscriberImpl_getUnreadCount(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native void delete_NativeSubscriberImpl(long jarg1);
  public final static native void LogLevel_setLogLevel(int jarg1);
  public final static native long new_LogLevel();
  public final static native void delete_LogLevel(long jarg1);

  public static void SwigDirector_NativeParticipantListener_onParticipantDiscovery(NativeParticipantListener jself, long infoPtr, long guidHigh, long guidLow, int discoveryStatus) {
    jself.onParticipantDiscovery(infoPtr, guidHigh, guidLow, discoveryStatus);
  }
  public static void SwigDirector_NativePublisherListener_onWriterMatched(NativePublisherListener jself, int matchingStatus, long guidHigh, long guidLow) {
    jself.onWriterMatched(matchingStatus, guidHigh, guidLow);
  }
  public static void SwigDirector_NativeSubscriberListener_onSubscriptionMatched(NativeSubscriberListener jself, int matchingStatus, long guidHigh, long guidLow) {
    jself.onSubscriptionMatched(matchingStatus, guidHigh, guidLow);
  }
  public static void SwigDirector_NativeSubscriberListener_onNewDataMessage(NativeSubscriberListener jself) {
    jself.onNewDataMessage();
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
