/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package us.ihmc.rtps.impl.fastRTPS;

public class FastRTPSJNI {
  public final static native long new_charArray(int jarg1);
  public final static native void delete_charArray(long jarg1);
  public final static native short charArray_getitem(long jarg1, int jarg2);
  public final static native void charArray_setitem(long jarg1, int jarg2, short jarg3);
  public final static native long new_octetVector__SWIG_0();
  public final static native long new_octetVector__SWIG_1(long jarg1, octetVector jarg1_);
  public final static native long octetVector_capacity(long jarg1, octetVector jarg1_);
  public final static native void octetVector_reserve(long jarg1, octetVector jarg1_, long jarg2);
  public final static native boolean octetVector_isEmpty(long jarg1, octetVector jarg1_);
  public final static native void octetVector_clear(long jarg1, octetVector jarg1_);
  public final static native long new_octetVector__SWIG_2(int jarg1, short jarg2);
  public final static native int octetVector_doSize(long jarg1, octetVector jarg1_);
  public final static native void octetVector_doAdd__SWIG_0(long jarg1, octetVector jarg1_, short jarg2);
  public final static native void octetVector_doAdd__SWIG_1(long jarg1, octetVector jarg1_, int jarg2, short jarg3);
  public final static native short octetVector_doRemove(long jarg1, octetVector jarg1_, int jarg2);
  public final static native short octetVector_doGet(long jarg1, octetVector jarg1_, int jarg2);
  public final static native short octetVector_doSet(long jarg1, octetVector jarg1_, int jarg2, short jarg3);
  public final static native void octetVector_doRemoveRange(long jarg1, octetVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_octetVector(long jarg1);
  public final static native long new_stringVector__SWIG_0();
  public final static native long new_stringVector__SWIG_1(long jarg1, stringVector jarg1_);
  public final static native long stringVector_capacity(long jarg1, stringVector jarg1_);
  public final static native void stringVector_reserve(long jarg1, stringVector jarg1_, long jarg2);
  public final static native boolean stringVector_isEmpty(long jarg1, stringVector jarg1_);
  public final static native void stringVector_clear(long jarg1, stringVector jarg1_);
  public final static native long new_stringVector__SWIG_2(int jarg1, String jarg2);
  public final static native int stringVector_doSize(long jarg1, stringVector jarg1_);
  public final static native void stringVector_doAdd__SWIG_0(long jarg1, stringVector jarg1_, String jarg2);
  public final static native void stringVector_doAdd__SWIG_1(long jarg1, stringVector jarg1_, int jarg2, String jarg3);
  public final static native String stringVector_doRemove(long jarg1, stringVector jarg1_, int jarg2);
  public final static native String stringVector_doGet(long jarg1, stringVector jarg1_, int jarg2);
  public final static native String stringVector_doSet(long jarg1, stringVector jarg1_, int jarg2, String jarg3);
  public final static native void stringVector_doRemoveRange(long jarg1, stringVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_stringVector(long jarg1);
  public final static native java.nio.ByteBuffer new_octetArray(int jarg1);
  public final static native void delete_octetArray(java.nio.ByteBuffer jarg1);
  public final static native short octetArray_getitem(java.nio.ByteBuffer jarg1, int jarg2);
  public final static native void octetArray_setitem(java.nio.ByteBuffer jarg1, int jarg2, short jarg3);
  public final static native void delete_RemoteLocatorList(long jarg1);
  public final static native void Time_t_seconds_set(long jarg1, Time_t jarg1_, int jarg2);
  public final static native int Time_t_seconds_get(long jarg1, Time_t jarg1_);
  public final static native void Time_t_nanosec_set(long jarg1, Time_t jarg1_, long jarg2);
  public final static native long Time_t_nanosec_get(long jarg1, Time_t jarg1_);
  public final static native long new_Time_t__SWIG_0();
  public final static native long new_Time_t__SWIG_1(int jarg1, long jarg2);
  public final static native void Time_t_fraction(long jarg1, Time_t jarg1_, long jarg2);
  public final static native void Time_t_setFraction(long jarg1, Time_t jarg1_, long jarg2);
  public final static native void delete_Time_t(long jarg1);
  public final static native void delete_ParticipantDiscoveryInfo(long jarg1);
  public final static native void delete_WriterDiscoveryInfo(long jarg1);
  public final static native void delete_ReaderDiscoveryInfo(long jarg1);
  public final static native long VOLATILE_DURABILITY_QOS_get();
  public final static native long TRANSIENT_LOCAL_DURABILITY_QOS_get();
  public final static native long TRANSIENT_DURABILITY_QOS_get();
  public final static native long PERSISTENT_DURABILITY_QOS_get();
  public final static native long AUTOMATIC_LIVELINESS_QOS_get();
  public final static native long MANUAL_BY_PARTICIPANT_LIVELINESS_QOS_get();
  public final static native long MANUAL_BY_TOPIC_LIVELINESS_QOS_get();
  public final static native long BEST_EFFORT_RELIABILITY_QOS_get();
  public final static native long RELIABLE_RELIABILITY_QOS_get();
  public final static native long SHARED_OWNERSHIP_QOS_get();
  public final static native long EXCLUSIVE_OWNERSHIP_QOS_get();
  public final static native long BY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS_get();
  public final static native long BY_SOURCE_TIMESTAMP_DESTINATIONORDER_QOS_get();
  public final static native long INSTANCE_PRESENTATION_QOS_get();
  public final static native long TOPIC_PRESENTATION_QOS_get();
  public final static native long GROUP_PRESENTATION_QOS_get();
  public final static native long KEEP_LAST_HISTORY_QOS_get();
  public final static native long KEEP_ALL_HISTORY_QOS_get();
  public final static native long SYNCHRONOUS_PUBLISH_MODE_get();
  public final static native long ASYNCHRONOUS_PUBLISH_MODE_get();
  public final static native long DISALLOW_TYPE_COERCION_get();
  public final static native long ALLOW_TYPE_COERCION_get();
  public final static native long AUTO_get();
  public final static native long ON_get();
  public final static native long OFF_get();
  public final static native long new_TopicAttributes__SWIG_0();
  public final static native long new_TopicAttributes__SWIG_1(String jarg1, String jarg2, int jarg3);
  public final static native long new_TopicAttributes__SWIG_2(String jarg1, String jarg2);
  public final static native void delete_TopicAttributes(long jarg1);
  public final static native void TopicAttributes_topicKind_set(long jarg1, TopicAttributes jarg1_, int jarg2);
  public final static native int TopicAttributes_topicKind_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_topicName_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_topicName_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_topicDataType_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_topicDataType_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_historyQos_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_historyQos_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_resourceLimitsQos_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_resourceLimitsQos_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_type_id_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_type_id_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_type_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_type_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_type_information_set(long jarg1, TopicAttributes jarg1_, long jarg2);
  public final static native long TopicAttributes_type_information_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_auto_fill_type_object_set(long jarg1, TopicAttributes jarg1_, boolean jarg2);
  public final static native boolean TopicAttributes_auto_fill_type_object_get(long jarg1, TopicAttributes jarg1_);
  public final static native void TopicAttributes_auto_fill_type_information_set(long jarg1, TopicAttributes jarg1_, boolean jarg2);
  public final static native boolean TopicAttributes_auto_fill_type_information_get(long jarg1, TopicAttributes jarg1_);
  public final static native boolean TopicAttributes_checkQos(long jarg1, TopicAttributes jarg1_);
  public final static native long new_PublisherAttributes();
  public final static native void delete_PublisherAttributes(long jarg1);
  public final static native void PublisherAttributes_topic_set(long jarg1, PublisherAttributes jarg1_, long jarg2, TopicAttributes jarg2_);
  public final static native long PublisherAttributes_topic_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_qos_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_qos_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_times_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_times_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_unicastLocatorList_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_unicastLocatorList_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_multicastLocatorList_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_multicastLocatorList_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_remoteLocatorList_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_remoteLocatorList_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_throughputController_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_throughputController_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_historyMemoryPolicy_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_historyMemoryPolicy_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_properties_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_properties_get(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_matched_subscriber_allocation_set(long jarg1, PublisherAttributes jarg1_, long jarg2);
  public final static native long PublisherAttributes_matched_subscriber_allocation_get(long jarg1, PublisherAttributes jarg1_);
  public final static native short PublisherAttributes_getUserDefinedID(long jarg1, PublisherAttributes jarg1_);
  public final static native short PublisherAttributes_getEntityID(long jarg1, PublisherAttributes jarg1_);
  public final static native void PublisherAttributes_setUserDefinedID(long jarg1, PublisherAttributes jarg1_, short jarg2);
  public final static native void PublisherAttributes_setEntityID(long jarg1, PublisherAttributes jarg1_, short jarg2);
  public final static native void SubscriberAttributes_topic_set(long jarg1, SubscriberAttributes jarg1_, long jarg2, TopicAttributes jarg2_);
  public final static native long SubscriberAttributes_topic_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_qos_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_qos_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_times_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_times_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_unicastLocatorList_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_unicastLocatorList_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_multicastLocatorList_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_multicastLocatorList_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_remoteLocatorList_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_remoteLocatorList_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_expectsInlineQos_set(long jarg1, SubscriberAttributes jarg1_, boolean jarg2);
  public final static native boolean SubscriberAttributes_expectsInlineQos_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_historyMemoryPolicy_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_historyMemoryPolicy_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_properties_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_properties_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_matched_publisher_allocation_set(long jarg1, SubscriberAttributes jarg1_, long jarg2);
  public final static native long SubscriberAttributes_matched_publisher_allocation_get(long jarg1, SubscriberAttributes jarg1_);
  public final static native long new_SubscriberAttributes();
  public final static native void delete_SubscriberAttributes(long jarg1);
  public final static native short SubscriberAttributes_getUserDefinedID(long jarg1, SubscriberAttributes jarg1_);
  public final static native short SubscriberAttributes_getEntityID(long jarg1, SubscriberAttributes jarg1_);
  public final static native void SubscriberAttributes_setUserDefinedID(long jarg1, SubscriberAttributes jarg1_, short jarg2);
  public final static native void SubscriberAttributes_setEntityID(long jarg1, SubscriberAttributes jarg1_, short jarg2);
  public final static native void SampleInfoMarshaller_encapsulation_set(long jarg1, SampleInfoMarshaller jarg1_, short jarg2);
  public final static native short SampleInfoMarshaller_encapsulation_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_dataLength_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_dataLength_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_changeKind_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_changeKind_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_ownershipStrength_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_ownershipStrength_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_time_seconds_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_time_seconds_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_time_nsec_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_time_nsec_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_instanceHandle_value_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_instanceHandle_value_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_GuidHigh_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_sampleIdentity_GuidHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_GuidLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_sampleIdentity_GuidLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_sequenceNumberHigh_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_sampleIdentity_sequenceNumberHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_sampleIdentity_sequenceNumberLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_sampleIdentity_sequenceNumberLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_GuidHigh_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_relatedSampleIdentity_GuidHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_GuidLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_relatedSampleIdentity_GuidLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberHigh_set(long jarg1, SampleInfoMarshaller jarg1_, int jarg2);
  public final static native int SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberHigh_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberLow_set(long jarg1, SampleInfoMarshaller jarg1_, long jarg2);
  public final static native long SampleInfoMarshaller_relatedSampleIdentity_sequenceNumberLow_get(long jarg1, SampleInfoMarshaller jarg1_);
  public final static native void SampleInfoMarshaller_getInstanceHandleValue(long jarg1, SampleInfoMarshaller jarg1_, java.nio.ByteBuffer jarg2);
  public final static native long new_SampleInfoMarshaller();
  public final static native void delete_SampleInfoMarshaller(long jarg1);
  public final static native void NativeParticipantListener_onParticipantDiscovery(long jarg1, NativeParticipantListener jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void NativeParticipantListener_onParticipantDiscoverySwigExplicitNativeParticipantListener(long jarg1, NativeParticipantListener jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void NativeParticipantListener_onPublisherDiscovery(long jarg1, NativeParticipantListener jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, RemoteLocatorList jarg5_, long jarg6, long jarg7, String jarg8, String jarg9, int jarg10, long jarg11, int jarg12, long jarg13);
  public final static native void NativeParticipantListener_onPublisherDiscoverySwigExplicitNativeParticipantListener(long jarg1, NativeParticipantListener jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, RemoteLocatorList jarg5_, long jarg6, long jarg7, String jarg8, String jarg9, int jarg10, long jarg11, int jarg12, long jarg13);
  public final static native void NativeParticipantListener_onSubscriberDiscovery(long jarg1, NativeParticipantListener jarg1_, int jarg2, long jarg3, long jarg4, boolean jarg5, long jarg6, RemoteLocatorList jarg6_, long jarg7, long jarg8, String jarg9, String jarg10, int jarg11, int jarg12, long jarg13);
  public final static native void NativeParticipantListener_onSubscriberDiscoverySwigExplicitNativeParticipantListener(long jarg1, NativeParticipantListener jarg1_, int jarg2, long jarg3, long jarg4, boolean jarg5, long jarg6, RemoteLocatorList jarg6_, long jarg7, long jarg8, String jarg9, String jarg10, int jarg11, int jarg12, long jarg13);
  public final static native String NativeParticipantListener_getName(long jarg1, NativeParticipantListener jarg1_, long jarg2);
  public final static native void delete_NativeParticipantListener(long jarg1);
  public final static native long new_NativeParticipantListener();
  public final static native void NativeParticipantListener_director_connect(NativeParticipantListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NativeParticipantListener_change_ownership(NativeParticipantListener obj, long cptr, boolean take_or_release);
  public final static native long new_NativeParticipantImpl(int jarg1, long jarg2, long jarg3, NativeParticipantListener jarg3_) throws java.io.IOException;
  public final static native long NativeParticipantImpl_getGuidLow(long jarg1, NativeParticipantImpl jarg1_);
  public final static native long NativeParticipantImpl_getGuidHigh(long jarg1, NativeParticipantImpl jarg1_);
  public final static native void NativeParticipantImpl_registerType(long jarg1, NativeParticipantImpl jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native void delete_NativeParticipantImpl(long jarg1);
  public final static native void NativePublisherListener_onWriterMatched(long jarg1, NativePublisherListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void NativePublisherListener_onWriterMatchedSwigExplicitNativePublisherListener(long jarg1, NativePublisherListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void delete_NativePublisherListener(long jarg1);
  public final static native long new_NativePublisherListener();
  public final static native void NativePublisherListener_director_connect(NativePublisherListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NativePublisherListener_change_ownership(NativePublisherListener obj, long cptr, boolean take_or_release);
  public final static native long new_NativePublisherImpl(int jarg1, int jarg2, int jarg3, long jarg4, long jarg5, TopicAttributes jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11, long jarg12, NativeParticipantImpl jarg12_, long jarg13, NativePublisherListener jarg13_) throws java.io.IOException;
  public final static native void delete_NativePublisherImpl(long jarg1);
  public final static native boolean NativePublisherImpl_createPublisher(long jarg1, NativePublisherImpl jarg1_);
  public final static native void NativePublisherImpl_write(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native void NativePublisherImpl_dispose(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native void NativePublisherImpl_unregister(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native void NativePublisherImpl_dispose_and_unregister(long jarg1, NativePublisherImpl jarg1_, java.nio.ByteBuffer jarg2, int jarg3, short jarg4, java.nio.ByteBuffer jarg5, int jarg6);
  public final static native int NativePublisherImpl_removeAllChange(long jarg1, NativePublisherImpl jarg1_);
  public final static native boolean NativePublisherImpl_wait_for_all_acked(long jarg1, NativePublisherImpl jarg1_, long jarg2, Time_t jarg2_);
  public final static native long NativePublisherImpl_getGuidLow(long jarg1, NativePublisherImpl jarg1_);
  public final static native long NativePublisherImpl_getGuidHigh(long jarg1, NativePublisherImpl jarg1_);
  public final static native void NativeSubscriberListener_onSubscriptionMatched(long jarg1, NativeSubscriberListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void NativeSubscriberListener_onSubscriptionMatchedSwigExplicitNativeSubscriberListener(long jarg1, NativeSubscriberListener jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void NativeSubscriberListener_onNewDataMessage(long jarg1, NativeSubscriberListener jarg1_);
  public final static native void NativeSubscriberListener_onNewDataMessageSwigExplicitNativeSubscriberListener(long jarg1, NativeSubscriberListener jarg1_);
  public final static native void delete_NativeSubscriberListener(long jarg1);
  public final static native long new_NativeSubscriberListener();
  public final static native void NativeSubscriberListener_director_connect(NativeSubscriberListener obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NativeSubscriberListener_change_ownership(NativeSubscriberListener obj, long cptr, boolean take_or_release);
  public final static native long new_NativeSubscriberImpl(int jarg1, int jarg2, int jarg3, long jarg4, long jarg5, TopicAttributes jarg5_, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, boolean jarg11, long jarg12, NativeParticipantImpl jarg12_, long jarg13, NativeSubscriberListener jarg13_) throws java.io.IOException;
  public final static native boolean NativeSubscriberImpl_createSubscriber(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native long NativeSubscriberImpl_getGuidLow(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native long NativeSubscriberImpl_getGuidHigh(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native void NativeSubscriberImpl_waitForUnreadMessage(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native boolean NativeSubscriberImpl_readnextData(long jarg1, NativeSubscriberImpl jarg1_, int jarg2, java.nio.ByteBuffer jarg3, long jarg4, SampleInfoMarshaller jarg4_, int jarg5, long jarg6);
  public final static native boolean NativeSubscriberImpl_takeNextData(long jarg1, NativeSubscriberImpl jarg1_, int jarg2, java.nio.ByteBuffer jarg3, long jarg4, SampleInfoMarshaller jarg4_, int jarg5, long jarg6);
  public final static native boolean NativeSubscriberImpl_isInCleanState(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native long NativeSubscriberImpl_getUnreadCount(long jarg1, NativeSubscriberImpl jarg1_);
  public final static native void delete_NativeSubscriberImpl(long jarg1);
  public final static native void LogLevel_setLogLevel(int jarg1);
  public final static native long new_LogLevel();
  public final static native void delete_LogLevel(long jarg1);
  public final static native short getLocatorOctet(int jarg1, long jarg2);
  public final static native void setLocatorOctet(long jarg1, int jarg2, short jarg3);
  public final static native long getLocator(long jarg1, int jarg2);
  public final static native long getRemoteUnicastLocator(long jarg1, RemoteLocatorList jarg1_, int jarg2);
  public final static native long getRemoteMulticastLocator(long jarg1, RemoteLocatorList jarg1_, int jarg2);
  public final static native int getRemoteMulticastLocatorSize(long jarg1, RemoteLocatorList jarg1_);
  public final static native int getRemoteUnicastLocatorSize(long jarg1, RemoteLocatorList jarg1_);

  public static void SwigDirector_NativeParticipantListener_onParticipantDiscovery(NativeParticipantListener jself, long infoPtr, long guidHigh, long guidLow, int status) {
    jself.onParticipantDiscovery(infoPtr, guidHigh, guidLow, ParticipantDiscoveryInfo.DISCOVERY_STATUS.swigToEnum(status));
  }
  public static void SwigDirector_NativeParticipantListener_onPublisherDiscovery(NativeParticipantListener jself, int discovery_status, long guidHigh, long guidLow, long remoteLocatorList, long participantGuidHigh, long participantGuidLow, String typeName, String topicName, int userDefinedId, long typeMaxSerialized, int topicKind, long writerQoS) {
    jself.onPublisherDiscovery(WriterDiscoveryInfo.DISCOVERY_STATUS.swigToEnum(discovery_status), guidHigh, guidLow, (remoteLocatorList == 0) ? null : new RemoteLocatorList(remoteLocatorList, false), participantGuidHigh, participantGuidLow, typeName, topicName, userDefinedId, typeMaxSerialized, TopicKind_t.swigToEnum(topicKind), (writerQoS == 0) ? null : new SWIGTYPE_p_fastdds__dds__WriterQos(writerQoS, false));
  }
  public static void SwigDirector_NativeParticipantListener_onSubscriberDiscovery(NativeParticipantListener jself, int discovery_status, long guidHigh, long guidLow, boolean expectsInlineQos, long remoteLocatorList, long participantGuidHigh, long participantGuidLow, String typeName, String topicName, int userDefinedId, int topicKind, long readerQoS) {
    jself.onSubscriberDiscovery(ReaderDiscoveryInfo.DISCOVERY_STATUS.swigToEnum(discovery_status), guidHigh, guidLow, expectsInlineQos, (remoteLocatorList == 0) ? null : new RemoteLocatorList(remoteLocatorList, false), participantGuidHigh, participantGuidLow, typeName, topicName, userDefinedId, TopicKind_t.swigToEnum(topicKind), (readerQoS == 0) ? null : new SWIGTYPE_p_fastdds__dds__ReaderQos(readerQoS, false));
  }
  public static void SwigDirector_NativePublisherListener_onWriterMatched(NativePublisherListener jself, int status, long guidHigh, long guidLow) {
    jself.onWriterMatched(MatchingStatus.swigToEnum(status), guidHigh, guidLow);
  }
  public static void SwigDirector_NativeSubscriberListener_onSubscriptionMatched(NativeSubscriberListener jself, int status, long guidHigh, long guidLow) {
    jself.onSubscriptionMatched(MatchingStatus.swigToEnum(status), guidHigh, guidLow);
  }
  public static void SwigDirector_NativeSubscriberListener_onNewDataMessage(NativeSubscriberListener jself) {
    jself.onNewDataMessage();
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
